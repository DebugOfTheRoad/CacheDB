//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CacheDB.Net
{
    
    
    /// <summary>
    /// The CacheDbSection Configuration Section.
    /// </summary>
    public partial class CacheDbSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the CacheDbSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CacheDbSectionSectionName = "cacheDbSection";
        
        /// <summary>
        /// Gets the CacheDbSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::CacheDB.Net.CacheDbSection Instance
        {
            get
            {
                return ((global::CacheDB.Net.CacheDbSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CacheDB.Net.CacheDbSection.CacheDbSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.CacheDbSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.CacheDbSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Levels Property
        /// <summary>
        /// The XML name of the <see cref="Levels"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string LevelsPropertyName = "levels";
        
        /// <summary>
        /// Gets or sets the Levels.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Levels.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.CacheDbSection.LevelsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CacheDB.Net.LevelCachedCollection Levels
        {
            get
            {
                return ((global::CacheDB.Net.LevelCachedCollection)(base[global::CacheDB.Net.CacheDbSection.LevelsPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.CacheDbSection.LevelsPropertyName] = value;
            }
        }
        #endregion
        
        #region DbManager Property
        /// <summary>
        /// The XML name of the <see cref="DbManager"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DbManagerPropertyName = "dbManager";
        
        /// <summary>
        /// Gets or sets the DbManager.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The DbManager.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.CacheDbSection.DbManagerPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CacheDB.Net.DbManagerConfig DbManager
        {
            get
            {
                return ((global::CacheDB.Net.DbManagerConfig)(base[global::CacheDB.Net.CacheDbSection.DbManagerPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.CacheDbSection.DbManagerPropertyName] = value;
            }
        }
        #endregion
        
        #region Policies Property
        /// <summary>
        /// The XML name of the <see cref="Policies"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PoliciesPropertyName = "policies";
        
        /// <summary>
        /// Gets or sets the Policies.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Policies.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.CacheDbSection.PoliciesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CacheDB.Net.PolicyCollection Policies
        {
            get
            {
                return ((global::CacheDB.Net.PolicyCollection)(base[global::CacheDB.Net.CacheDbSection.PoliciesPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.CacheDbSection.PoliciesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// The LevelCachedConfig Configuration Element.
    /// </summary>
    public partial class LevelCachedConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region UpgradeValue Property
        /// <summary>
        /// The XML name of the <see cref="UpgradeValue"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string UpgradeValuePropertyName = "upgradeValue";
        
        /// <summary>
        /// Gets or sets the UpgradeValue.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The UpgradeValue.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.LevelCachedConfig.UpgradeValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int UpgradeValue
        {
            get
            {
                return ((int)(base[global::CacheDB.Net.LevelCachedConfig.UpgradeValuePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.LevelCachedConfig.UpgradeValuePropertyName] = value;
            }
        }
        #endregion
        
        #region Maximum Property
        /// <summary>
        /// The XML name of the <see cref="Maximum"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string MaximumPropertyName = "maximum";
        
        /// <summary>
        /// Gets or sets the Maximum.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Maximum.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.LevelCachedConfig.MaximumPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Maximum
        {
            get
            {
                return ((int)(base[global::CacheDB.Net.LevelCachedConfig.MaximumPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.LevelCachedConfig.MaximumPropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.LevelCachedConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.LevelCachedConfig.NamePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.LevelCachedConfig.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// A collection of LevelCachedConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CacheDB.Net.LevelCachedConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class LevelCachedCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CacheDB.Net.LevelCachedConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string LevelCachedConfigPropertyName = "levelCachedConfig";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CacheDB.Net.LevelCachedCollection.LevelCachedConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CacheDB.Net.LevelCachedCollection.LevelCachedConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CacheDB.Net.LevelCachedConfig)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CacheDB.Net.LevelCachedConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CacheDB.Net.LevelCachedConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CacheDB.Net.LevelCachedConfig();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.LevelCachedConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CacheDB.Net.LevelCachedConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.LevelCachedConfig this[int index]
        {
            get
            {
                return ((global::CacheDB.Net.LevelCachedConfig)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.LevelCachedConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CacheDB.Net.LevelCachedConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.LevelCachedConfig this[object name]
        {
            get
            {
                return ((global::CacheDB.Net.LevelCachedConfig)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CacheDB.Net.LevelCachedConfig"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="levelCachedConfig">The <see cref="global::CacheDB.Net.LevelCachedConfig"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CacheDB.Net.LevelCachedConfig levelCachedConfig)
        {
            base.BaseAdd(levelCachedConfig);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CacheDB.Net.LevelCachedConfig"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="levelCachedConfig">The <see cref="global::CacheDB.Net.LevelCachedConfig"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CacheDB.Net.LevelCachedConfig levelCachedConfig)
        {
            base.BaseRemove(this.GetElementKey(levelCachedConfig));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.LevelCachedConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CacheDB.Net.LevelCachedConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.LevelCachedConfig GetItemAt(int index)
        {
            return ((global::CacheDB.Net.LevelCachedConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.LevelCachedConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CacheDB.Net.LevelCachedConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.LevelCachedConfig GetItemByKey(string name)
        {
            return ((global::CacheDB.Net.LevelCachedConfig)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// The DbManagerConfig Configuration Element.
    /// </summary>
    public partial class DbManagerConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.DbManagerConfig.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.DbManagerConfig.TypePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.DbManagerConfig.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Formater Property
        /// <summary>
        /// The XML name of the <see cref="Formater"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string FormaterPropertyName = "formater";
        
        /// <summary>
        /// Gets or sets the Formater.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Formater.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.DbManagerConfig.FormaterPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Formater
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.DbManagerConfig.FormaterPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.DbManagerConfig.FormaterPropertyName] = value;
            }
        }
        #endregion
        
        #region Properties Property
        /// <summary>
        /// The XML name of the <see cref="Properties"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PropertiesPropertyName = "properties";
        
        /// <summary>
        /// Gets or sets the Properties.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Properties.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.DbManagerConfig.PropertiesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CacheDB.Net.PropertyCollection Properties
        {
            get
            {
                return ((global::CacheDB.Net.PropertyCollection)(base[global::CacheDB.Net.DbManagerConfig.PropertiesPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.DbManagerConfig.PropertiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// The PropertyConfig Configuration Element.
    /// </summary>
    public partial class PropertyConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.PropertyConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.PropertyConfig.NamePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.PropertyConfig.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.PropertyConfig.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.PropertyConfig.ValuePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.PropertyConfig.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// A collection of PropertyConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CacheDB.Net.PropertyConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class PropertyCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CacheDB.Net.PropertyConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PropertyConfigPropertyName = "propertyConfig";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CacheDB.Net.PropertyCollection.PropertyConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CacheDB.Net.PropertyCollection.PropertyConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CacheDB.Net.PropertyConfig)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CacheDB.Net.PropertyConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CacheDB.Net.PropertyConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CacheDB.Net.PropertyConfig();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PropertyConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CacheDB.Net.PropertyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PropertyConfig this[int index]
        {
            get
            {
                return ((global::CacheDB.Net.PropertyConfig)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PropertyConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CacheDB.Net.PropertyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PropertyConfig this[object name]
        {
            get
            {
                return ((global::CacheDB.Net.PropertyConfig)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CacheDB.Net.PropertyConfig"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="propertyConfig">The <see cref="global::CacheDB.Net.PropertyConfig"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CacheDB.Net.PropertyConfig propertyConfig)
        {
            base.BaseAdd(propertyConfig);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CacheDB.Net.PropertyConfig"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="propertyConfig">The <see cref="global::CacheDB.Net.PropertyConfig"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CacheDB.Net.PropertyConfig propertyConfig)
        {
            base.BaseRemove(this.GetElementKey(propertyConfig));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PropertyConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CacheDB.Net.PropertyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PropertyConfig GetItemAt(int index)
        {
            return ((global::CacheDB.Net.PropertyConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PropertyConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CacheDB.Net.PropertyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PropertyConfig GetItemByKey(string name)
        {
            return ((global::CacheDB.Net.PropertyConfig)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// The PolicyConfig Configuration Element.
    /// </summary>
    public partial class PolicyConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.PolicyConfig.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.PolicyConfig.TypePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.PolicyConfig.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region ObjectType Property
        /// <summary>
        /// The XML name of the <see cref="ObjectType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ObjectTypePropertyName = "objectType";
        
        /// <summary>
        /// Gets or sets the ObjectType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ObjectType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.PolicyConfig.ObjectTypePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string ObjectType
        {
            get
            {
                return ((string)(base[global::CacheDB.Net.PolicyConfig.ObjectTypePropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.PolicyConfig.ObjectTypePropertyName] = value;
            }
        }
        #endregion
        
        #region Properties Property
        /// <summary>
        /// The XML name of the <see cref="Properties"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PropertiesPropertyName = "properties";
        
        /// <summary>
        /// Gets or sets the Properties.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Properties.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CacheDB.Net.PolicyConfig.PropertiesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CacheDB.Net.PropertyCollection Properties
        {
            get
            {
                return ((global::CacheDB.Net.PropertyCollection)(base[global::CacheDB.Net.PolicyConfig.PropertiesPropertyName]));
            }
            set
            {
                base[global::CacheDB.Net.PolicyConfig.PropertiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CacheDB.Net
{
    
    
    /// <summary>
    /// A collection of PolicyConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CacheDB.Net.PolicyConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class PolicyCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CacheDB.Net.PolicyConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PolicyConfigPropertyName = "policyConfig";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CacheDB.Net.PolicyCollection.PolicyConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CacheDB.Net.PolicyCollection.PolicyConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CacheDB.Net.PolicyConfig)(element)).ObjectType;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CacheDB.Net.PolicyConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CacheDB.Net.PolicyConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CacheDB.Net.PolicyConfig();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PolicyConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CacheDB.Net.PolicyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PolicyConfig this[int index]
        {
            get
            {
                return ((global::CacheDB.Net.PolicyConfig)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PolicyConfig"/> with the specified key.
        /// </summary>
        /// <param name="objectType">The key of the <see cref="global::CacheDB.Net.PolicyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PolicyConfig this[object objectType]
        {
            get
            {
                return ((global::CacheDB.Net.PolicyConfig)(base.BaseGet(objectType)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CacheDB.Net.PolicyConfig"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="policyConfig">The <see cref="global::CacheDB.Net.PolicyConfig"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CacheDB.Net.PolicyConfig policyConfig)
        {
            base.BaseAdd(policyConfig);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CacheDB.Net.PolicyConfig"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="policyConfig">The <see cref="global::CacheDB.Net.PolicyConfig"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CacheDB.Net.PolicyConfig policyConfig)
        {
            base.BaseRemove(this.GetElementKey(policyConfig));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PolicyConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CacheDB.Net.PolicyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PolicyConfig GetItemAt(int index)
        {
            return ((global::CacheDB.Net.PolicyConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CacheDB.Net.PolicyConfig"/> with the specified key.
        /// </summary>
        /// <param name="objectType">The key of the <see cref="global::CacheDB.Net.PolicyConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CacheDB.Net.PolicyConfig GetItemByKey(string objectType)
        {
            return ((global::CacheDB.Net.PolicyConfig)(base.BaseGet(((object)(objectType)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
